var connectionType="mbbridge";mb.setReceiveCallback("receiveMessage");function sendMessage(c,d,a){d=JSON.stringify(d);mb.sendMessage(c,d,a)}
function receiveMessage(c,d,a){decodedData=decodeURIComponent(a);console.log("DecodedData::::"+decodedData);a=JSON.parse(decodedData);var f=a.component,b=a.nameSpace;c=a.value;d=a.options;var g=a.method;a=a.eventType;console.log("component is::::"+f);console.log("namespace is::::"+b);console.log("value is:::: "+c);console.log("options is:::: "+d);console.log("method is:::: "+g);console.log("eventType is:::: "+a);var h="",h=null==b||0==b.length?f:f+"."+b,e=getCurrentObject(f,b);if(null!=e)if(null!=
g&&"clear"===g)f=d||null,console.log("Received Delete method call for NodeLevel \x3d "+h+", leaf \x3d "+e.isLeaf()),b=null,b=f?handleDeleteWithOptions(h,d,e.isLeaf(),e.isArray,e.isMap):handleDeleteWithNoOptions(h,e.isLeaf(),e.isArray,e.isMap),console.log("Deleted Item ::: ",b),null==c&&(c=b);else if(e.isArray&&null!=c)console.log("Received component is of Array Type"),setItemsOfArrayType(h,c,d);else for(attrKey in console.log("Received component is of non Array Type"),c){attrVal=c[attrKey];console.log("ATTRIBUTE KEY::  "+
attrKey);console.log("ATTRIBUTE VALUE::  "+attrVal);var g="",g=null==b||""==b?attrKey:b+"."+attrKey,k=getCurrentObject(f,g);null!=k?k.isArray?setItemsOfArrayType(h+"."+attrKey,attrVal,d):setItemsOfLeafOrNonLeafType(e,attrKey,attrVal):console.log("Unable to get the current object for "+f+"."+g)}executeSubscriptionCallbackForParentChild(h,c,a)};